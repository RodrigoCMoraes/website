user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on; # Enable TCP_NODELAY to send small packets immediately

    keepalive_timeout  20;

    ## enables GZIP compression ##
    gzip on;

    ## Compression level (1-9) - 4 is balanced, 9 maximizes compression ##
    gzip_comp_level 5;

    ## Minimum file size for compression in bytes ##
    gzip_min_length 1000;

    ## Compress data for clients using proxies ##
    gzip_proxied any;

    ## Add vary header for responses eligible for compression ##
    gzip_vary on;

    ## content types to compress, excluding text/html which is default ##
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/html
        text/xml;

    # include /etc/nginx/conf.d/*.conf;
    server {

        location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
            expires 30d;
            add_header Pragma public;
            add_header Cache-Control "public";
        }

        listen 443 reuseport; # Use `reuseport` to distribute incoming connections among worker processes more efficiently
        listen 80 reuseport; # Use `reuseport` to distribute incoming connections among worker processes more efficiently
        server_name localhost;
        root /var/www/website;
        index index.html;

        # Enable OCSP stapling for faster SSL handshake
        ssl_stapling on;
        ssl_stapling_verify on;

        # Enable HPKP for enhanced security (only enable after thorough testing)
        add_header Public-Key-Pins 'pin-sha256="base64+primary=="; pin-sha256="base64+backup=="; max-age=5184000; includeSubDomains; preload';

        # Optional: Implement DNS prefetching for faster domain resolution
        resolver 8.8.8.8 valid=300s;
        resolver_timeout 5s;
    }
}
